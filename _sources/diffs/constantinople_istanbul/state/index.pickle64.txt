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LV2UaDJdlGg0XZRoNl2UjAl4bWw6c3BhY2WUjAhwcmVzZXJ2ZZR1aDhqUQUAAGgmak8FAABoKE5oJGoxBQAAdWJlaCl9lChoK12UagEBAABhaC1dlGgyXZSMB2NsYXNzZXOUYWg0XZRoNl2UdWg4aAloJmhraChLHGgkaiAFAABoJWgDdWJoCimBlH2UKGgFaAZoB12UKGgPKYGUfZQoaAWMCUZ1bmN0aW9uc5RoB12UaB+MCUZ1bmN0aW9uc5SFlIGUfZQoaAVoBmgkavsFAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aA5oJmhraChLJWgkavgFAABoJWgDdWJqQwUAACmBlH2UKGgFaAZoB12UaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwEc3BlY5RqTgUAAHVoOGpCBQAAaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAGgkavgFAABoJWgDdWJqUgUAACmBlH2UKGgFWNUFAAAKCgoKY2xvc2Vfc3RhdGUKCkZyZWUgcmVzb3VyY2VzIGhlbGQgYnkgdGhlIHN0YXRlLiBVc2VkIGJ5IG9wdGltaXplZCBpbXBsZW1lbnRhdGlvbnMgdG8KCmJlZ2luX3RyYW5zYWN0aW9uCgpTdGFydCBhIHN0YXRlIHRyYW5zYWN0aW9uLgoKY29tbWl0X3RyYW5zYWN0aW9uCgpDb21taXQgYSBzdGF0ZSB0cmFuc2FjdGlvbi4KCnJvbGxiYWNrX3RyYW5zYWN0aW9uCgpSb2xsYmFjayBhIHN0YXRlIHRyYW5zYWN0aW9uLCByZXNldHRpbmcgdGhlIHN0YXRlIHRvIHRoZSBwb2ludCB3aGVuIHRoZQoKZ2V0X2FjY291bnQKCkdldCB0aGUgQWNjb3VudCBvYmplY3QgYXQgYW4gYWRkcmVzcy4gUmV0dXJucyBFTVBUWV9BQ0NPVU5UIGlmIHRoZXJlCgpnZXRfYWNjb3VudF9vcHRpb25hbAoKR2V0IHRoZSBBY2NvdW50IG9iamVjdCBhdCBhbiBhZGRyZXNzLiBSZXR1cm5zIE5vbmUgKHJhdGhlciB0aGFuCgpzZXRfYWNjb3VudAoKU2V0IHRoZSBBY2NvdW50IG9iamVjdCBhdCBhbiBhZGRyZXNzLiBTZXR0aW5nIHRvIE5vbmUgZGVsZXRlcwoKZGVzdHJveV9hY2NvdW50CgpDb21wbGV0ZWx5IHJlbW92ZSB0aGUgYWNjb3VudCBhdCBhZGRyZXNzIGFuZCBhbGwgb2YgaXRzIHN0b3JhZ2UuCgpkZXN0cm95X3N0b3JhZ2UKCkNvbXBsZXRlbHkgcmVtb3ZlIHRoZSBzdG9yYWdlIGF0IGFkZHJlc3MuCgpnZXRfc3RvcmFnZQoKR2V0IGEgdmFsdWUgYXQgYSBzdG9yYWdlIGtleSBvbiBhbiBhY2NvdW50LiBSZXR1cm5zIFUyNTYoMCkgaWYgdGhlCgpzZXRfc3RvcmFnZQoKU2V0IGEgdmFsdWUgYXQgYSBzdG9yYWdlIGtleSBvbiBhbiBhY2NvdW50LiBTZXR0aW5nIHRvIFUyNTYoMCkgZGVsZXRlcwoKc3RvcmFnZV9yb290CgpDYWxjdWxhdGUgdGhlIHN0b3JhZ2Ugcm9vdCBvZiBhbiBhY2NvdW50LgoKc3RhdGVfcm9vdAoKQ2FsY3VsYXRlIHRoZSBzdGF0ZSByb290LgoKYWNjb3VudF9leGlzdHMKCkNoZWNrcyBpZiBhbiBhY2NvdW50IGV4aXN0cyBpbiB0aGUgc3RhdGUgdHJpZQoKYWNjb3VudF9oYXNfY29kZV9vcl9ub25jZQoKQ2hlY2tzIGlmIGFuIGFjY291bnQgaGFzIG5vbiB6ZXJvIG5vbmNlIG9yIG5vbiBlbXB0eSBjb2RlCgppc19hY2NvdW50X2VtcHR5CgpDaGVja3MgaWYgYW4gYWNjb3VudCBoYXMgemVybyBub25jZSwgZW1wdHkgY29kZSBhbmQgemVybyBiYWxhbmNlLgoKbW9kaWZ5X3N0YXRlCgpNb2RpZnkgYW4gQWNjb3VudCBpbiB0aGUgU3RhdGUuCgptb3ZlX2V0aGVyCgpNb3ZlIGZ1bmRzIGJldHdlZW4gYWNjb3VudHMuCgpzZXRfYWNjb3VudF9iYWxhbmNlCgpTZXRzIHRoZSBiYWxhbmNlIG9mIGFuIGFjY291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eS1vYmqUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRqkQYAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIwvZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuYmVnaW5fdHJhbnNhY3Rpb26UjAhyZWZ0aXRsZZSML2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmJlZ2luX3RyYW5zYWN0aW9ulHVoOGgUaCZOaChOaCRqjQYAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGqKBgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRqhwYAAHViaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMGlN0YXJ0IGEgc3RhdGUgdHJhbnNhY3Rpb24ulGgHXZRoH4waU3RhcnQgYSBzdGF0ZSB0cmFuc2FjdGlvbi6UhZSBlH2UKGgFaAZoJGq+BgAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkarsGAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGqHBgAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGp8BQAAaCZoJ2goSwBoJGoyBgAAaCVoA3Vian0FAAApgZR9lChoBWgGaAddlChqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxMOm9iajpgY29tbWl0X3RyYW5zYWN0aW9uIDxldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5jb21taXRfdHJhbnNhY3Rpb24+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVq4QYAAGgHXZRoH4wSY29tbWl0X3RyYW5zYWN0aW9ulIWUgZR9lChoBWgGaCRq5gYAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkauMGAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMMGV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmNvbW1pdF90cmFuc2FjdGlvbpSMCHJlZnRpdGxllIwwZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuY29tbWl0X3RyYW5zYWN0aW9ulHVoOGgUaCZOaChOaCRq3wYAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGrcBgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRq2QYAAHViaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMG0NvbW1pdCBhIHN0YXRlIHRyYW5zYWN0aW9uLpRoB12UaB+MG0NvbW1pdCBhIHN0YXRlIHRyYW5zYWN0aW9uLpSFlIGUfZQoaAVoBmgkahAHAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS9zdGF0ZS9pbmRleC5yc3Q6Njc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqDQcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqgQUAAGgmTmgoTmgkatkGAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4anwFAABoJmgnaChLAGgkajIGAABoJWgDdWJqfQUAACmBlH2UKGgFaAZoB12UKGqCBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjFA6b2JqOmByb2xsYmFja190cmFuc2FjdGlvbiA8ZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUucm9sbGJhY2tfdHJhbnNhY3Rpb24+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVqMwcAAGgHXZRoH4wUcm9sbGJhY2tfdHJhbnNhY3Rpb26UhZSBlH2UKGgFaAZoJGo4BwAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlChoL4wCcHmUjAZweS1vYmqUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRqNQcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIwyZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUucm9sbGJhY2tfdHJhbnNhY3Rpb26UjAhyZWZ0aXRsZZSMMmV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLnJvbGxiYWNrX3RyYW5zYWN0aW9ulHVoOGgUaCZOaChOaCRqMQcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGouBwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRqKwcAAHViaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMR1JvbGxiYWNrIGEgc3RhdGUgdHJhbnNhY3Rpb24sIHJlc2V0dGluZyB0aGUgc3RhdGUgdG8gdGhlIHBvaW50IHdoZW4gdGhllGgHXZRoH4xHUm9sbGJhY2sgYSBzdGF0ZSB0cmFuc2FjdGlvbiwgcmVzZXR0aW5nIHRoZSBzdGF0ZSB0byB0aGUgcG9pbnQgd2hlbiB0aGWUhZSBlH2UKGgFaAZoJGpiBwAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkal8HAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGorBwAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGp8BQAAaCZoJ2goSwBoJGoyBgAAaCVoA3Vian0FAAApgZR9lChoBWgGaAddlChqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYw+Om9iajpgZ2V0X2FjY291bnQgPGV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmdldF9hY2NvdW50PmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFaoUHAABoB12UaB+MC2dldF9hY2NvdW50lIWUgZR9lChoBWgGaCRqigcAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkaocHAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMKWV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmdldF9hY2NvdW50lIwIcmVmdGl0bGWUjClldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5nZXRfYWNjb3VudJR1aDhoFGgmTmgoTmgkaoMHAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS9zdGF0ZS9pbmRleC5yc3Q6Njc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqgAcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqgQUAAGgmTmgoTmgkan0HAAB1YmqCBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEhHZXQgdGhlIGBBY2NvdW50YCBvYmplY3QgYXQgYW4gYWRkcmVzcy4gUmV0dXJucyBgRU1QVFlfQUNDT1VOVGAgaWYgdGhlcmWUaAddlChoH4wIR2V0IHRoZSCUhZSBlH2UKGgFaAZoJGq0BwAAaCVoA2gmaCdoKEsAdWJqAAUAACmBlH2UKGgFjAlgQWNjb3VudGCUaAddlGgfjAdBY2NvdW50lIWUgZR9lChoBWgGaCRqvAcAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq/wQAAGgmTmgoTmgkarQHAAB1YmgfjB8gb2JqZWN0IGF0IGFuIGFkZHJlc3MuIFJldHVybnMglIWUgZR9lChoBWgGaCRqtAcAAGglaANoJmgnaChLAHViagAFAAApgZR9lChoBYwPYEVNUFRZX0FDQ09VTlRglGgHXZRoH4wNRU1QVFlfQUNDT1VOVJSFlIGUfZQoaAVoBmgkas4HAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4av8EAABoJk5oKE5oJGq0BwAAdWJoH4wJIGlmIHRoZXJllIWUgZR9lChoBWgGaCRqtAcAAGglaANoJmgnaChLAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGqxBwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRqfQcAAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqfAUAAGgmaCdoKEsAaCRqMgYAAGglaAN1Ymp9BQAAKYGUfZQoaAVoBmgHXZQoaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMUDpvYmo6YGdldF9hY2NvdW50X29wdGlvbmFsIDxldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5nZXRfYWNjb3VudF9vcHRpb25hbD5glGgHXZRoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBWr7BwAAaAddlGgfjBRnZXRfYWNjb3VudF9vcHRpb25hbJSFlIGUfZQoaAVoBmgkagAIAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGr9BwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDJldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5nZXRfYWNjb3VudF9vcHRpb25hbJSMCHJlZnRpdGxllIwyZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuZ2V0X2FjY291bnRfb3B0aW9uYWyUdWg4aBRoJk5oKE5oJGr5BwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkavYHAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGrzBwAAdWJqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxDR2V0IHRoZSBgQWNjb3VudGAgb2JqZWN0IGF0IGFuIGFkZHJlc3MuIFJldHVybnMgYE5vbmVgIChyYXRoZXIgdGhhbpRoB12UKGgfjAhHZXQgdGhlIJSFlIGUfZQoaAVoBmgkaioIAABoJWgDaCZoJ2goSwB1YmoABQAAKYGUfZQoaAWMCWBBY2NvdW50YJRoB12UaB+MB0FjY291bnSUhZSBlH2UKGgFaAZoJGoyCAAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGr/BAAAaCZOaChOaCRqKggAAHViaB+MHyBvYmplY3QgYXQgYW4gYWRkcmVzcy4gUmV0dXJucyCUhZSBlH2UKGgFaAZoJGoqCAAAaCVoA2gmaCdoKEsAdWJqAAUAACmBlH2UKGgFjAZgTm9uZWCUaAddlGgfjAROb25llIWUgZR9lChoBWgGaCRqRAgAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq/wQAAGgmTmgoTmgkaioIAAB1YmgfjA0gKHJhdGhlciB0aGFulIWUgZR9lChoBWgGaCRqKggAAGglaANoJmgnaChLAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGonCAAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRq8wcAAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqfAUAAGgmaCdoKEsAaCRqMgYAAGglaAN1Ymp9BQAAKYGUfZQoaAVoBmgHXZQoaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMPjpvYmo6YHNldF9hY2NvdW50IDxldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5zZXRfYWNjb3VudD5glGgHXZRoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBWpxCAAAaAddlGgfjAtzZXRfYWNjb3VudJSFlIGUfZQoaAVoBmgkanYIAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGpzCAAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjClldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5zZXRfYWNjb3VudJSMCHJlZnRpdGxllIwpZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuc2V0X2FjY291bnSUdWg4aBRoJk5oKE5oJGpvCAAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkamwIAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGppCAAAdWJqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxBU2V0IHRoZSBgQWNjb3VudGAgb2JqZWN0IGF0IGFuIGFkZHJlc3MuIFNldHRpbmcgdG8gYE5vbmVgIGRlbGV0ZXOUaAddlChoH4wIU2V0IHRoZSCUhZSBlH2UKGgFaAZoJGqgCAAAaCVoA2gmaCdoKEsAdWJqAAUAACmBlH2UKGgFjAlgQWNjb3VudGCUaAddlGgfjAdBY2NvdW50lIWUgZR9lChoBWgGaCRqqAgAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq/wQAAGgmTmgoTmgkaqAIAAB1YmgfjCIgb2JqZWN0IGF0IGFuIGFkZHJlc3MuIFNldHRpbmcgdG8glIWUgZR9lChoBWgGaCRqoAgAAGglaANoJmgnaChLAHViagAFAAApgZR9lChoBYwGYE5vbmVglGgHXZRoH4wETm9uZZSFlIGUfZQoaAVoBmgkaroIAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4av8EAABoJk5oKE5oJGqgCAAAdWJoH4wIIGRlbGV0ZXOUhZSBlH2UKGgFaAZoJGqgCAAAaCVoA2gmaCdoKEsAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkap0IAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGppCAAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGp8BQAAaCZoJ2goSwBoJGoyBgAAaCVoA3Vian0FAAApgZR9lChoBWgGaAddlChqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxGOm9iajpgZGVzdHJveV9hY2NvdW50IDxldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5kZXN0cm95X2FjY291bnQ+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVq5wgAAGgHXZRoH4wPZGVzdHJveV9hY2NvdW50lIWUgZR9lChoBWgGaCRq7AgAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkaukIAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMLWV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmRlc3Ryb3lfYWNjb3VudJSMCHJlZnRpdGxllIwtZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuZGVzdHJveV9hY2NvdW50lHVoOGgUaCZOaChOaCRq5QgAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGriCAAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRq3wgAAHViaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMQkNvbXBsZXRlbHkgcmVtb3ZlIHRoZSBhY2NvdW50IGF0IGBhZGRyZXNzYCBhbmQgYWxsIG9mIGl0cyBzdG9yYWdlLpRoB12UKGgfjCFDb21wbGV0ZWx5IHJlbW92ZSB0aGUgYWNjb3VudCBhdCCUhZSBlH2UKGgFaAZoJGoWCQAAaCVoA2gmaCdoKEsAdWJqAAUAACmBlH2UKGgFjAlgYWRkcmVzc2CUaAddlGgfjAdhZGRyZXNzlIWUgZR9lChoBWgGaCRqHgkAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq/wQAAGgmTmgoTmgkahYJAAB1YmgfjBggYW5kIGFsbCBvZiBpdHMgc3RvcmFnZS6UhZSBlH2UKGgFaAZoJGoWCQAAaCVoA2gmaCdoKEsAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkahMJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGrfCAAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGp8BQAAaCZoJ2goSwBoJGoyBgAAaCVoA3Vian0FAAApgZR9lChoBWgGaAddlChqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxGOm9iajpgZGVzdHJveV9zdG9yYWdlIDxldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5kZXN0cm95X3N0b3JhZ2U+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVqSwkAAGgHXZRoH4wPZGVzdHJveV9zdG9yYWdllIWUgZR9lChoBWgGaCRqUAkAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkak0JAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMLWV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmRlc3Ryb3lfc3RvcmFnZZSMCHJlZnRpdGxllIwtZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuZGVzdHJveV9zdG9yYWdllHVoOGgUaCZOaChOaCRqSQkAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGpGCQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRqQwkAAHViaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMK0NvbXBsZXRlbHkgcmVtb3ZlIHRoZSBzdG9yYWdlIGF0IGBhZGRyZXNzYC6UaAddlChoH4whQ29tcGxldGVseSByZW1vdmUgdGhlIHN0b3JhZ2UgYXQglIWUgZR9lChoBWgGaCRqegkAAGglaANoJmgnaChLAHViagAFAAApgZR9lChoBYwJYGFkZHJlc3NglGgHXZRoH4wHYWRkcmVzc5SFlIGUfZQoaAVoBmgkaoIJAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4av8EAABoJk5oKE5oJGp6CQAAdWJoH4wBLpSFlIGUfZQoaAVoBmgkanoJAABoJWgDaCZoJ2goSwB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS9zdGF0ZS9pbmRleC5yc3Q6Njc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqdwkAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqgQUAAGgmTmgoTmgkakMJAAB1YmVoKX2U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aW5vcGxlLnN0YXRlLnN0b3JhZ2Vfcm9vdD5glGgHXZRoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBWp3CgAAaAddlGgfjAxzdG9yYWdlX3Jvb3SUhZSBlH2UKGgFaAZoJGp8CgAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlChoL4wCcHmUjAZweS1vYmqUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRqeQoAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIwqZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuc3RvcmFnZV9yb290lIwIcmVmdGl0bGWUjCpldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS5zdG9yYWdlX3Jvb3SUdWg4aBRoJk5oKE5oJGp1CgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkanIKAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGpvCgAAdWJqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYwpQ2FsY3VsYXRlIHRoZSBzdG9yYWdlIHJvb3Qgb2YgYW4gYWNjb3VudC6UaAddlGgfjClDYWxjdWxhdGUgdGhlIHN0b3JhZ2Ugcm9vdCBvZiBhbiBhY2NvdW50LpSFlIGUfZQoaAVoBmgkaqYKAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS9zdGF0ZS9pbmRleC5yc3Q6Njc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqowoAAHViYWgpfZQoaCtdlGgtXZRo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JmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkasELAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMLmV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmlzX2FjY291bnRfZW1wdHmUjAhyZWZ0aXRsZZSMLmV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLmlzX2FjY291bnRfZW1wdHmUdWg4aBRoJk5oKE5oJGq9CwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkaroLAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aoEFAABoJk5oKE5oJGq3CwAAdWJqggUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxBQ2hlY2tzIGlmIGFuIGFjY291bnQgaGFzIHplcm8gbm9uY2UsIGVtcHR5IGNvZGUgYW5kIHplcm8gYmFsYW5jZS6UaAddlGgfjEFDaGVja3MgaWYgYW4gYWNjb3VudCBoYXMgemVybyBub25jZSwgZW1wdHkgY29kZSBhbmQgemVybyBiYWxhbmNlLpSFlIGUfZQoaAVoBmgkau4LAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS9zdGF0ZS9pbmRleC5yc3Q6Njc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRq6wsAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqgQUAAGgmTmgoTmgkarcLAAB1YmVoKX2UKGgrXZRoLV2UaDJd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Y291bnQgPGV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnN0YXRlLnRvdWNoX2FjY291bnQ+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVqKw0AAGgHXZRoH4wNdG91Y2hfYWNjb3VudJSFlIGUfZQoaAVoBmgkajANAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGotDQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjCtldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS50b3VjaF9hY2NvdW50lIwIcmVmdGl0bGWUjCtldGhlcmV1bS5jb25zdGFudGlub3BsZS5zdGF0ZS50b3VjaF9hY2NvdW50lHVoOGgUaCZOaChOaCRqKQ0AAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlL2luZGV4LnJzdDo2Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGomDQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqBBQAAaCZOaChOaCRqIw0AAHViaoIFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMIEluaXRpYWxpemVzIGFuIGFjY291bnQgdG8gc3RhdGUulGgHXZRoH4wgSW5pdGlhbGl6ZXMgYW4gYWNjb3VudCB0byBzdGF0ZS6UhZSBlH2UKGgFaAZoJGpaDQAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUvaW5kZXgucnN0OjY3OjxhdXRvc3VtbWFyeT6UaChLAWgkalcNAAB1YmFoKX2U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XZRoNl2UjAZkb21haW6UaiwQAACMB29ianR5cGWUakAQAACMCGRlc2N0eXBllGpAEAAAjAdub2luZGV4lIl1aDhqJA8AAGgmaCdoKEsAaCRqZQ8AAGglaAN1YmhuKYGUfZQoaAVoBmgHXZRoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAdlbnRyaWVzlF2UKGogDwAAjBxfc25hcHNob3RzIChTdGF0ZSBhdHRyaWJ1dGUplIwuZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGUuU3RhdGUuX3NuYXBzaG90c5RoBk50lGF1aDhobWgmaCdoKEsAaCRqZQ8AAGglaAN1YmolDwAAKYGUfZQoaAVoBmgHXZQoaioPAAApgZR9lChoBYwKX3NuYXBzaG90c5RoB12UKGpBDwAAKYGUfZQoaAVqWxAAAGgHXZRoH4wKX3NuYXBzaG90c5SFlIGUfZQoaAVoBmgkal0QAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGpMDwAAak0PAABqTg8AAGpPDwAAZWgyXZRoNF2UaDZdlIwJeG1sOnNwYWNllGrwBQAAdWg4akAPAABoJmhraChLAGgkalkQAABoJWgDdWJqMA8AACmBlH2UKGgFWBkBAAAgOkxpc3RbVHVwbGVbZXRoZXJldW0uY29uc3RhbnRpbm9wbGUudHJpZS5UcmllW2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLmV0aF90eXBlcy5BZGRyZXNzLCBPcHRpb25hbFtldGhlcmV1bS5jb25zdGFudGlub3BsZS5ldGhfdHlwZXMuQWNjb3VudF1dLCBEaWN0W2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLmV0aF90eXBlcy5BZGRyZXNzLCBldGhlcmV1bS5jb25zdGFudGlub3BsZS50cmllLlRyaWVbZXRoZXJldW0uYmFzZV90eXBlcy5CeXRlcywgZXRoZXJldW0uYmFzZV90eXBlcy5VMjU2XV1dXZRoB12UKGgfjAEglIWUgZR9lChoBWgGaCRqaxAAAGglaANoJmgnaChLAHViapQPAAApgZR9lChoBWgGaAddlGgfjPs6TGlzdFtUdXBsZVtldGhlcmV1bS5jb25zdGFudGlub3BsZS50cmllLlRyaWVbZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuZXRoX3R5cGVzLkFkZHJlc3MsIE9wdGlvbmFsW2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLmV0aF90eXBlcy5BY2NvdW50XV0sIERpY3RbZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuZXRoX3R5cGVzLkFkZHJlc3MsIGV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnRyaWUuVHJpZVtldGhlcmV1bS5iYXNlX3R5cGVzLkJ5dGVzLJSFlIGUfZQoaAVoBmgkanMQAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UjA9jaGFuZ2UtcmVwbGFjZWSUYWgyXZRoNF2UaDZdlHVoOGqTDwAAaCRqaxAAAGglaANoJmgnaChLAHViapQPAAApgZR9lChoBWgGaAddlGgfjN06TGlzdFtUdXBsZVtldGhlcmV1bS5pc3RhbmJ1bC50cmllLlRyaWVbZXRoZXJldW0uaXN0YW5idWwuZXRoX3R5cGVzLkFkZHJlc3MsIE9wdGlvbmFsW2V0aGVyZXVtLmlzdGFuYnVsLmV0aF90eXBlcy5BY2NvdW50XV0sIERpY3RbZXRoZXJldW0uaXN0YW5idWwuZXRoX3R5cGVzLkFkZHJlc3MsIGV0aGVyZXVtLmlzdGFuYnVsLnRyaWUuVHJpZVtldGhlcmV1bS5iYXNlX3R5cGVzLkJ5dGVzLJSFlIGUfZQoaAVoBmgkaoEQAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UjBJjaGFuZ2UtcmVwbGFjZW1lbnSUYWgyXZRoNF2UaDZdlHVoOGqTDwAAaCRqaxAAAGglaANoJmgnaChLAHViaB+MHSBldGhlcmV1bS5iYXNlX3R5cGVzLlUyNTZdXV1dlIWUgZR9lChoBWgGaCRqaxAAAGglaANoJmgnaChLAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCXhtbDpzcGFjZZRq8AUAAHVoOGovDwAAaCZoa2goSwBoJGpZEAAAaCVoA3ViZWgpfZQoaCtdlGpUEAAAYWgtXZQoalcPAABqWA8AAIwCcHmUaloPAABqWw8AAGVoMl2UaDRdlGg2XZSMBm1vZHVsZZRqYA8AAIwFY2xhc3OUai0PAACMCGZ1bGxuYW1llIwQU3RhdGUuX3Nu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apceAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4avgRAABoJk5oKE5oJGp0HgAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGpjDwAAaCZoa2goTmgkagAeAAB1YmVoKX2UKGgrXZRoLV2UKGptHgAAjAhmdW5jdGlvbpRlaDJdlGg0XZRoNl2UjAZkb21haW6Uam0eAACMB29ianR5cGWUavQfAACMCGRlc2N0eXBllGr0HwAAjAdub2luZGV4lIl1aDhqJA8AAGgmTmgoTmgkauQdAAB1YmpZEQAAKYGUfZQoaAWM9GRlZiBnZXRfc3RvcmFnZShzdGF0ZTogU3RhdGUsIGFkZHJlc3M6IEFkZHJlc3MsIGtleTogQnl0ZXMpIC0+IFUyNTY6CiAgICB0cmllID0gc3RhdGUuX3N0b3JhZ2VfdHJpZXMuZ2V0KGFkZHJlc3MpCiAgICBpZiB0cmllIGlzIE5vbmU6CiAgICAgICAgcmV0dXJuIFUyNTYoMCkKCiAgICB2YWx1ZSA9IHRyaWVfZ2V0KHRyaWUsIGtleSkKCiAgICBhc3NlcnQgaXNpbnN0YW5jZSh2YWx1ZSwgVTI1NikKICAgIHJldHVybiB2YWx1ZQqUaAddlGgfjPRkZWYgZ2V0X3N0b3JhZ2Uoc3RhdGU6IFN0YXRlLCBhZGRyZXNzOiBBZGRyZXNzLCBrZXk6IEJ5dGVzKSAtPiBVMjU2OgogICAgdHJpZSA9IHN0YXRlLl9zdG9yYWdlX3RyaWVzLmdldChhZGRyZXNzKQogICAgaWYgdHJpZSBpcyBOb25lOgogICAgICAgIHJldHVybiBVMjU2KDApCgogICAgdmFsdWUgPSB0cmllX2dldCh0cmllLCBrZXkpCgogICAgYXNzZXJ0IGlzaW5zdGFuY2UodmFsdWUsIFUyNTYpCiAgICByZXR1cm4gdmFsdWUKlIWUgZR9lChoBWgGaCRq/B8AAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMBnNvdXJjZZSMVi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlLnB5lIwJ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aG90cyA9PSBbXQoKICAgIGRlZiBnZXRfc3RvcmFnZV9yb290KGFkZHJlc3M6IEFkZHJlc3MpIC0+IFJvb3Q6CiAgICAgICAgcmV0dXJuIHN0b3JhZ2Vfcm9vdChzdGF0ZSwgYWRkcmVzcykKCiAgICByZXR1cm4gcm9vdChzdGF0ZS5fbWFpbl90cmllLCBnZXRfc3RvcmFnZV9yb290PWdldF9zdG9yYWdlX3Jvb3QpCpRoB12UaB+M72RlZiBzdGF0ZV9yb290KHN0YXRlOiBTdGF0ZSkgLT4gUm9vdDoKICAgIGFzc2VydCBzdGF0ZS5fc25hcHNob3RzID09IFtdCgogICAgZGVmIGdldF9zdG9yYWdlX3Jvb3QoYWRkcmVzczogQWRkcmVzcykgLT4gUm9vdDoKICAgICAgICByZXR1cm4gc3RvcmFnZV9yb290KHN0YXRlLCBhZGRyZXNzKQoKICAgIHJldHVybiByb290KHN0YXRlLl9tYWluX3RyaWUsIGdldF9zdG9yYWdlX3Jvb3Q9Z2V0X3N0b3JhZ2Vfcm9vdCkKlIWUgZR9lChoBWgGaCRqGiUAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMBnNvdXJjZZSMVi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3N0YXRlLnB5lIwJeG1sOnNwYWNllGrwBQAAjAVmb3JjZZSJjAhsYW5ndWFnZZSMBnB5dGhvbpSMDmhpZ2hsaWdodF9hcmdzlH2UanARAABLAXOMB2xpbmVub3OUiXVoOGpYEQAAaCZoa2goTYwBaCRq3CMAAHViZWgpfZQoaCtdlGoqAwAAYWgtXZRoMl2UjApzdGF0ZV9yb290lGFoNF2UaDZdlHVoOGgJaCZoa2goTXwBaCRq5Q4AAGglaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYwOYWNjb3VudF9leGlzdHOUaAddlGgfjA5hY2NvdW50X2V4aXN0c5SFlIGUfZQoaAVoBmgkajslAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aA5oJmhr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AABoJmhraChOaCRqAicAAHViZWgpfZQoaCtdlGgtXZQoalcnAACMCGZ1bmN0aW9ulGVoMl2UaDRdlGg2XZSMBmRvbWFpbpRqVycAAIwHb2JqdHlwZZRqbigAAIwIZGVzY3R5cGWUam4oAACMB25vaW5kZXiUiXVoOGokDwAAaCZOaChOaCRq5iYAAHVialkRAAApgZR9lChoBYysZGVmIGFjY291bnRfaGFzX2NvZGVfb3Jfbm9uY2Uoc3RhdGU6IFN0YXRlLCBhZGRyZXNzOiBBZGRyZXNzKSAtPiBib29sOgogICAgYWNjb3VudCA9IGdldF9hY2NvdW50KHN0YXRlLCBhZGRyZXNzKQogICAgcmV0dXJuIGFjY291bnQubm9uY2UgIT0gVWludCgwKSBvciBhY2NvdW50LmNvZGUgIT0gYiIiCpRoB12UaB+MrGRlZiBhY2NvdW50X2hhc19jb2RlX29yX25vbmNlKHN0YXRlOiBTdGF0ZSwgYWRkcmVzczogQWRkcmVzcykgLT4gYm9vbDoKICAgIGFjY291bnQgPSBnZXRfYWNjb3VudChzdGF0ZSwgYWRkcmVzcykKICAgIHJldHVybiBhY2NvdW50Lm5vbmNlICE9IFVpbnQoMCkgb3IgYWNjb3VudC5jb2RlICE9IGIiIgqUhZSBlH2UKGgFaAZoJGp2KAAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllIxWL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vY29uc3RhbnRpbm9wbGUvc3RhdGUucHmUjAl4bWw6c3BhY2WUavAFAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqcBEAAEsBc4wHbGluZW5vc5SJdWg4algRAABoJmhraChNuQFoJGrmJgAAdWJlaCl9lChoK12Uam4DAABhaC1dlGgyXZSMGWFjY291bnRfaGFzX2NvZGVfb3Jfbm9uY2WUYWg0XZRoNl2UdWg4aAloJmhraChNpwFoJGrlDgAAaCVoA3ViaAopgZR9lChoBWgGaAddlChoDymBlH2UKGgFjBBpc19hY2Nv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dWxsbmFtZZRqWysAAHVoOGopDwAAaCZoa2goTegBaCRqUisAAHViamQPAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMHE1vdmUgZnVuZHMgYmV0d2VlbiBhY2NvdW50cy6UaAddlGgfjBxNb3ZlIGZ1bmRzIGJldHdlZW4gYWNjb3VudHMulIWUgZR9lChoBWgGaCRq4SsAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmaGtoKE3rAWgkat4rAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4amMPAABoJmhraChOaCRqUisAAHViZWgpfZQoaCtdlGgtXZQoatcrAACMCGZ1bmN0aW9ulGVoMl2UaDRdlGg2XZSMBmRvbWFpbpRq1ysAAIwHb2JqdHlwZZRq+CsAAIwIZGVzY3R5cGWUavgrAACMB25vaW5kZXiUiXVoOGokDwAAaCZoa2goTmgkajYrAAB1YmpZEQAAKYGUfZQoaAVY+wEAAGRlZiBtb3ZlX2V0aGVyKAogICAgc3RhdGU6IFN0YXRlLAogICAgc2VuZGVyX2FkZHJlc3M6IEFkZHJlc3MsCiAgICByZWNpcGllbnRfYWRkcmVzczogQWRkcmVzcywKICAgIGFtb3VudDogVTI1NiwKKSAtPiBOb25lOgoKICAgIGRlZiByZWR1Y2Vfc2VuZGVyX2JhbGFuY2Uoc2VuZGVyOiBBY2NvdW50KSAtPiBOb25lOgogICAgICAgIGVuc3VyZShzZW5kZXIuYmFsYW5jZSA+PSBhbW91bnQsIEFzc2VydGlvbkVycm9yKQogICAgICAgIHNlbmRlci5iYWxhbmNlIC09IGFtb3VudAoKICAgIGRlZiBpbmNyZWFzZV9yZWNpcGllbnRfYmFsYW5jZShyZWNpcGllbnQ6IEFjY291bnQpIC0+IE5vbmU6CiAgICAgICAgcmVjaXBpZW50LmJhbGFuY2UgKz0gYW1vdW50CgogICAgbW9kaWZ5X3N0YXRlKHN0YXRlLCBzZW5kZXJfYWRkcmVzcywgcmVkdWNlX3NlbmRlcl9iYWxhbmNlKQogICAgbW9kaWZ5X3N0YXRlKHN0YXRlLCByZWNpcGllbnRfYWRkcmVzcywgaW5jcmVhc2VfcmVjaXBpZW50X2JhbGFuY2UpCpRoB12UaB9Y+wEAAGRlZiBtb3ZlX2V0aGVyKAogICAgc3RhdGU6IFN0YXRlLAogICAgc2VuZGVyX2FkZHJlc3M6IEFkZHJlc3MsCiAgICByZWNpcGllbnRfYWRkcmVzczogQWRkcmVzcywKICAgIGFtb3VudDogVTI1NiwKKSAtPiBOb25lOgoKICAgIGRlZiByZWR1Y2Vfc2VuZGVyX2JhbGFuY2Uoc2VuZGVyOiBBY2NvdW50KSAtPiBOb25lOgogICAgICAgIGVuc3VyZShzZW5kZXIuYmFsYW5jZSA+PSBhbW91bnQsIEFzc2VydGlvbkVycm9yKQogICAgICAgIHNlbmRlci5iYWxhbmNlIC09IGFtb3VudAoKICAgIGRlZiBpbmNyZWFzZV9yZWNpcGllbnRfYmFsYW5jZShyZWNpcGllbnQ6IEFjY291bnQpIC0+IE5vbmU6CiAgICAgICAgcmVjaXBpZW50LmJhbGFuY2UgKz0gYW1vdW50CgogICAgbW9kaWZ5X3N0YXRlKHN0YXRlLCBzZW5kZXJfYWRkcmVzcywgcmVkdWNlX3NlbmRlcl9iYWxhbmNlKQogICAgbW9kaWZ5X3N0YXRlKHN0YXRlLCByZWNpcGllbnRfYWRkcmVzcywgaW5jcmVhc2VfcmVjaXBpZW50X2JhbGFuY2UpCpSFlIGUfZQoaAVoBmgkagAsAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUjFYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9jb25zdGFudGlub3BsZS9zdGF0ZS5weZSMCXhtbDpzcGFjZZRq8AUAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGpwEQAASwFzjAdsaW5lbm9zlIl1aDhqWBEAAGgmaGtoKE3wAWgkajYrAAB1YmVoKX2UKGgrXZRq1AMAAGFoLV2UaDJdlIwKbW92ZV9ldGhlcpRhaDRdlGg2XZR1aDhoCWgmaGtoKE3lAWgkauUOAABoJWgDdWJoCimBlH2UKGgFaAZoB12UKGgPKYGUfZQo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aW5hbF9hY2NvdW50X3RyaWUsIGtleSkKCiAgICBhc3NlcnQgaXNpbnN0YW5jZShvcmlnaW5hbF92YWx1ZSwgVTI1NikKCiAgICByZXR1cm4gb3JpZ2luYWxfdmFsdWUKlGgHXZRoH1iIAQAAZGVmIGdldF9zdG9yYWdlX29yaWdpbmFsKHN0YXRlOiBTdGF0ZSwgYWRkcmVzczogQWRkcmVzcywga2V5OiBCeXRlcykgLT4gVTI1NjoKICAgIF8sIG9yaWdpbmFsX3RyaWUgPSBzdGF0ZS5fc25hcHNob3RzWzBdCiAgICBvcmlnaW5hbF9hY2NvdW50X3RyaWUgPSBvcmlnaW5hbF90cmllLmdldChhZGRyZXNzKQoKICAgIGlmIG9yaWdpbmFsX2FjY291bnRfdHJpZSBpcyBOb25lOgogICAgICAgIG9yaWdpbmFsX3ZhbHVlID0gVTI1NigwKQogICAgZWxzZToKICAgICAgICBvcmlnaW5hbF92YWx1ZSA9IHRyaWVfZ2V0KG9yaWdpbmFsX2FjY291bnRfdHJpZSwga2V5KQoKICAgIGFzc2VydCBpc2luc3RhbmNlKG9yaWdpbmFsX3ZhbHVlLCBVMjU2KQoKICAgIHJldHVybiBvcmlnaW5hbF92YWx1ZQqUhZSBlH2UKGgFaAZoJGpiNAAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllIxQL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vaXN0YW5idWwvc3RhdGUucHmUjAl4bWw6c3BhY2WUavAFAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZSMC2xpbmVub3N0YXJ0lEsBc4wHbGluZW5vc5SJdWg4algRAABoJmoRMwAAaChNaQJoJGoAMwAAdWJlaCl9lChoK12UaqAEAABhaC1dlIwMY2hhbmdlLWFkZGVklGFoMl2UjBRnZXRfc3RvcmFnZV9vcmlnaW5hbJRhaDRdlGg2XZR1aDhoCWgmahEzAABoKE1YAmgkauUOAABoJWgDdWJlaCl9lChoK12UalEBAABhaC1dlGgyXZSMDm1vZHVsZSBkZXRhaWxzlGFoNF2UaDZdlHVoOGgJaCZoa2goS0VoJGh+aCVoA3ViZWgpfZQoaCtdlIwFc3RhdGWUYWgtXZRoMl2UaDRdlGrPEAAAYWg2XZR1aDhoCWgmaGtoKEsHaCRoC2glaAN1YmVoKX2UKGgrXZQoaHyMHWV0aGVyZXVtLWNvbnN0YW50aW5vcGxlLXN0YXRllGVoLV2UaDJdlIwdZXRoZXJldW0uY29uc3RhbnRpbm9wbGUuc3RhdGWUYWg0XZRoNl2UdWg4aAloJmhraChLAmgkaANoJWgDdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllGgndWg4aAGMDmN1cnJlbnRfc291cmNllGgnjAxjdXJyZW50X2xpbmWUSwCMCHNldHRpbmdzlIwRZG9jdXRpbHMuZnJvbnRlbmSUjAZWYWx1ZXOUk5QpgZR9lCiMDHJlcG9ydF9sZXZlbJRLAowKaGFsdF9sZXZlbJRLBIwRZXhpdF9zdGF0dXNfbGV2ZWyUSwWMBWRlYnVnlE6MDndhcm5pbmdfc3RyZWFtlE6MCXRyYWNlYmFja5ROjA9vdXRwdXRfZW5jb2RpbmeUjAV1dGYtOJSMHW91dHB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwReG1sY2hhcnJlZnJlcGxhY2WUjA5lcnJvcl9lbmNvZGluZ5SMBXV0Zi04lIwcZXJyb3JfZW5jb2RpbmdfZXJyb3JfaGFuZGxlcpSMEGJhY2tzbGFzaHJlcGxhY2WUjBNyZWNvcmRfZGVwZW5kZW5jaWVzlIwOZG9jdXRpbHMudXRpbHOUjA5EZXBlbmRlbmN5TGlzdJSTlCmBlH2UKIwEbGlzdJRdlIwEZmlsZZROdWKMBmNvbmZpZ5ROjA1kdW1wX3NldHRpbmdzlE6MDmR1bXBfaW50ZXJuYWxzlE6MD2R1bXBfdHJhbnNmb3Jtc5ROjA9kdW1wX3BzZXVkb194bWyUTowQZXhwb3NlX2ludGVybmFsc5ROjA5zdHJpY3RfdmlzaXRvcpROjA9fZGlzYWJsZV9jb25maWeUTowHX3NvdXJjZZROjAxfZGVzdGluYXRpb26UjDZkb2MvZGlmZnMvY29uc3RhbnRpbm9wbGVfaXN0YW5idWwvc3RhdGUvaW5kZXgucGlja2xlNjSUjA1fY29uZmlnX2ZpbGVzlF2UjBFsaW5lX2xlbmd0aF9saW1pdJRNECeMCXRhYl93aWR0aJRLCIwQc3ludGF4X2hpZ2hsaWdodJSMBGxvbmeUjAxzbWFydF9xdW90ZXOUiYwTc21hcnRxdW90ZXNfbG9jYWxlc5ROjB1jaGFyYWN0ZXJfbGV2ZWxfaW5saW5lX21hcmt1cJSJjAZ3cml0ZXKUjAN4bWyUjBljb21wYXJlX3NlY3Rpb25zX2J5X25hbWVzlImMDGR1bXBfcnN0ZGlmZpROjAVfYm90aJR9lChoDk6MCWdlbmVyYXRvcpROjAlkYXRlc3RhbXCUTowLc291cmNlX2xpbmuUTowKc291cmNlX3VybJROjA10b2NfYmFja2xpbmtzlGqBBQAAjBJmb290bm90ZV9iYWNrbGlua3OUSwGMDXNlY3RudW1feGZvcm2USwGMDmRvY3RpdGxlX3hmb3JtlEsBjA1kb2NpbmZvX3hmb3JtlEsBjBJzZWN0c3VidGl0bGVfeGZvcm2USwCMDnN0cmlwX2NvbW1lbnRzlE6MDmlucHV0X2VuY29kaW5nlE6MHGlucHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjAZzdHJpY3SUjA1sYW5ndWFnZV9jb2RllIwCZW6UjA5wZXBfcmVmZXJlbmNlc5ROjAxwZXBfYmFzZV91cmyUjB9odHRwOi8vd3d3LnB5dGhvbi5vcmcvZGV2L3BlcHMvlIwVcGVwX2ZpbGVfdXJsX3RlbXBsYXRllIwIcGVwLSUwNGSUjA5yZmNfcmVmZXJlbmNlc5ROjAxyZmNfYmFzZV91cmyUjBtodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC+UjB10cmltX2Zvb3Rub3RlX3JlZmVyZW5jZV9zcGFjZZROjBZmaWxlX2luc2VydGlvbl9lbmFibGVklEsBjAtyYXdfZW5hYmxlZJRLAYwOYXV0b19pZF9wcmVmaXiUjAJpZJSMCWlkX3ByZWZpeJRoBowbc3RyaXBfZWxlbWVudHNfd2l0aF9jbGFzc2VzlE6MDXN0cmlwX2NsYXNzZXOUTnWMBGJvdGiUfZSMCl9vcHRpb25zVG+UjAVfYm90aJSMC19vbGRfc291cmNllIwcLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaZSMC19uZXdfc291cmNllIwJZG9jL2RpZmZzlGrmNAAAauc0AAB1YowIcmVwb3J0ZXKUTowQaW5kaXJlY3RfdGFyZ2V0c5RdlIwRc3Vic3RpdHV0aW9uX2RlZnOUfZSMEnN1YnN0aXR1dGlvbl9uYW1lc5R9lIwIcmVmbmFtZXOUfZSMBnJlZmlkc5R9lIwHbmFtZWlkc5R9lIwJbmFtZXR5cGVzlH2UaCt9lIwNZm9vdG5vdGVfcmVmc5R9lIwNY2l0YXRpb25fcmVmc5R9lIwNYXV0b2Zvb3Rub3Rlc5RdlIwRYXV0b2Zvb3Rub3RlX3JlZnOUXZSMEHN5bWJvbF9mb290bm90ZXOUXZSMFHN5bWJvbF9mb290bm90ZV9yZWZzlF2UjAlmb290bm90ZXOUXZSMCWNpdGF0aW9uc5RdlIwSYXV0b2Zvb3Rub3RlX3N0YXJ0lEsBjBVzeW1ib2xfZm9vdG5vdGVfc3RhcnSUSwCMCmlkX2NvdW50ZXKUjAtjb2xsZWN0aW9uc5SMB0NvdW50ZXKUk5R9lIWUUpSMDnBhcnNlX21lc3NhZ2VzlF2UjBJ0cmFuc2Zvcm1fbWVzc2FnZXOUXZSMC3RyYW5zZm9ybWVylE6MC2luY2x1ZGVfbG9nlF2UjApkZWNvcmF0aW9ulE5oJWgDdWIu